name: Test backend template

on:
  pull_request:
    branches:
      - main

jobs:
  test-run-template:
    runs-on: ubuntu-latest

    services:
      # Define a PostgreSQL service using the latest version of PostgreSQL
      postgres_db:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: fastapi_template_db
        ports:
          - 5434:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      postgres_db_test:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: fastapi_template_db_test
        ports:
          - 5435:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install global dependencies
        run: |
          pip install -r requirements.txt

      - name: Generate backend template
        run: |
          cd ../
          cookiecutter fastapi-generator/app --no-input

      - name: Install Poetry
        run: pip install poetry

      - name: Run lint
        run: |
          cd ../fastapi_template/
          pip install black==22.3 isort==5.13.2 ruff==0.5.3 
          black app tests --check
          isort app tests --check-only
          ruff check app tests

      - name: Run server
        run: |
          cd ../fastapi_template/
          poetry config virtualenvs.in-project true
          poetry env use 3.11
          poetry install
          poetry run alembic upgrade head
          poetry run uvicorn app.main:app --reload &

      - name: Run tests
        run: |
          cd ../fastapi_template/
          poetry run pytest --cov=app --cov-report=term
