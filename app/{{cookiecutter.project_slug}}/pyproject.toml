[tool.poetry]
name = "backend"
version = "0.1.0"
description = ""
authors = ["Digital Lab"]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = { version = "^0.109.0", extras = ["all"] }
alembic = "^1.8.0"
psycopg2 = "^2.9.3"
Faker = "^13.11.1"
gunicorn = "^20.1.0"
google-cloud-logging = "^3.0.0"
cryptography = "^37.0.3"
SQLAlchemy = "2.0.25"
httpx = "^0.23.0"
psycopg2-binary = "^2.9.6"
starlette-context = "^0.3.6"
asgi-correlation-id = "^4.2.0"
google-cloud-firestore = "^2.11.1"
sqlmodel = "^0.0.14"
pyjwt = "^2.8.0"
pytest = "^8.0.2"
pytest-mock = "^3.12.0"
pytest-cov = "^4.1.0"
pytest-env = "^1.1.3"
asyncpg = "^0.29.0"
pytest-asyncio = "^0.23.5.post1"
greenlet = "^3.0.3"
isort = "^5.13.2"
google-api-python-client = "^2.135.0"
tenacity = "^8.4.2"
google-auth = "^2.30.0"
google-auth-oauthlib = "^1.2.0"
google-auth-httplib2 = "^0.2.0"
google-auth-plugins = "^1.0.1"

[tool.poetry.group.dev.dependencies]
black = "^22.3"
isort = "^5.13.2"
ruff = "^0.5.3"

[tool.black]
line-length = 99                                                              # override black's default line-length
exclude = '(\.git|\.mypy_cache|\.tox|venv|\.venv|_build|buck-out|build|dist)'

[tool.isort]
profile = "black"

[tool.ruff]
target-version = "py311"
exclude = [
    ".venv",
    "venv",
    ".git",
    "__pycache__",
    "__init__.py",
    ".mypy_cache",
    ".pytest_cache",
    "tests/data_api",
]
line-length = 99

[tool.ruff.lint]
select = [
    "E",     # pycodestyle
    "UP",    # pyupgrade,
    "W",
    "F",
    "I",
    "UP",
    "ASYNC",
    "F",
]
ignore = ["E501", "I001"] # Ignore line length errors & import sorting

[tool.pytest.ini_options]
env = [
    "ENV=test",
    "SQLALCHEMY_DATABASE_URI=postgresql+asyncpg://postgres:postgres@localhost:5435/fastapi_template_db_test",
    "SQLALCHEMY_SILENCE_UBER_WARNING=1",
]
asyncio_mode = "auto"
